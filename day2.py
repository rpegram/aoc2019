from unittest import TestCase

def kill_elves(loost):
    i=0
    while i < len(loost):
        opcode = loost[i]
        if opcode == 99:
            return(loost)
        term1 = loost[i + 1]
        term2 = loost[i + 2]
        result = loost[i + 3]
        i = i + 4

        if opcode == 1:
            loost[result] = loost[term1] + loost[term2] 
        elif opcode == 2:
            loost[result] = loost[term1] * loost[term2] 
        else:
            raise Exception("The Grinch has won.", i, loost[i])

class TestKillElves(TestCase):
    def test_KE(self):
        self.assertEqual(
            kill_elves([1,9,10,3,2,3,11,0,99,30,40,50]),
            [3500,9,10,70,2,3,11,0,99,30,40,50]
        )

    def test_KE2(self):
        self.assertEqual(
            kill_elves([1,0,0,0,99]),
            [2,0,0,0,99]
        )

    def test_KE3(self):
        self.assertEqual(
            kill_elves([2,3,0,3,99]),
            [2,3,0,6,99]
        )

    def test_KE4(self):
        self.assertEqual(
            kill_elves([2,4,4,5,99,0]),
            [2,4,4,5,99,9801]
        )

    def test_KE5(self):
        self.assertEqual(
            kill_elves([1,1,1,4,99,5,6,0,99]),
            [30,1,1,4,2,5,6,0,99]
        )

#    def test_actual(self):
#        self.assertEqual(
#           kill_elves([1,13,69,3,1,1,2,3,1,3,4,3,1,5,0,3,2,13,1,19,1,10,19,23,1,23,9,27,1,5,27,31,2,31,13,35,1,35,5,39,1,39,5,43,2,13,43,47,2,47,10,51,1,51,6,55,2,55,9,59,1,59,5,63,1,63,13,67,2,67,6,71,1,71,5,75,1,75,5,79,1,79,9,83,1,10,83,87,1,87,10,91,1,91,9,95,1,10,95,99,1,10,99,103,2,103,10,107,1,107,9,111,2,6,111,115,1,5,115,119,2,119,13,123,1,6,123,127,2,9,127,131,1,131,5,135,1,135,13,139,1,139,10,143,1,2,143,147,1,147,10,0,99,2,0,14,0]),
#            [1,2]
#       )

bigboy =[1,13,69,3,1,1,2,3,1,3,4,3,1,5,0,3,2,13,1,19,1,10,19,23,1,23,9,27,1,5,27,31,2,31,13,35,1,35,5,39,1,39,5,43,2,13,43,47,2,47,10,51,1,51,6,55,2,55,9,59,1,59,5,63,1,63,13,67,2,67,6,71,1,71,5,75,1,75,5,79,1,79,9,83,1,10,83,87,1,87,10,91,1,91,9,95,1,10,95,99,1,10,99,103,2,103,10,107,1,107,9,111,2,6,111,115,1,5,115,119,2,119,13,123,1,6,123,127,2,9,127,131,1,131,5,135,1,135,13,139,1,139,10,143,1,2,143,147,1,147,10,0,99,2,0,14,0]

def elf2():

    for noun in range(100):
        for verb in range(100):
            bigboy =[1,13,69,3,1,1,2,3,1,3,4,3,1,5,0,3,2,13,1,19,1,10,19,23,1,23,9,27,1,5,27,31,2,31,13,35,1,35,5,39,1,39,5,43,2,13,43,47,2,47,10,51,1,51,6,55,2,55,9,59,1,59,5,63,1,63,13,67,2,67,6,71,1,71,5,75,1,75,5,79,1,79,9,83,1,10,83,87,1,87,10,91,1,91,9,95,1,10,95,99,1,10,99,103,2,103,10,107,1,107,9,111,2,6,111,115,1,5,115,119,2,119,13,123,1,6,123,127,2,9,127,131,1,131,5,135,1,135,13,139,1,139,10,143,1,2,143,147,1,147,10,0,99,2,0,14,0]
            bigboy[1] = noun
            bigboy[2] = verb

            result = kill_elves(bigboy)

            if result[0] == 19690720:
                return 100 * noun + verb
    
class TestKillElf2(TestCase):
    def test_KE(self):
        self.assertEqual(
            elf2(),
            69
        )
